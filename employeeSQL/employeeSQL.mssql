-- Table for employee csv file
CREATE TABLE employees (
    emp_no INT   NOT NULL,
    emp_title_id VARCHAR(10) NOT NULL,
    birth_date VARCHAR(10)   NOT NULL,
    first_name VARCHAR(30)   NOT NULL,
    last_name VARCHAR(30)   NOT NULL,
    sex VARCHAR(10)   NOT NULL,
    hire_date VARCHAR(10)  NOT NULL,
    CONSTRAINT pk_employees PRIMARY KEY (
        emp_no
     )
);



-- Table for employee salary csv file
CREATE TABLE Salaries (
    emp_no INT   NOT NULL,
    salary Int   NOT NULL
);



-- Table for department employees csv file
CREATE TABLE dept_emp (
    emp_no INT   NOT NULL,
    dept_no VARCHAR(10) NOT NULL
);


-- Table for department managers csv file
CREATE TABLE dept_manager (
    dept_no VARCHAR(10)  NOT NULL,
    emp_no INT   NOT NULL
);



-- Table for department tile csv file
CREATE TABLE departments (
    dept_no VARCHAR(10)  NOT NULL,
    dept_name VARCHAR(30)   NOT NULL,
    CONSTRAINT "pk_departments" PRIMARY KEY (
        "dept_no"
     )
);


-- Table for employee titles csv file
CREATE TABLE titles (
    emp_title_id VARCHAR(10)  NOT NULL,
    title VARCHAR(30)   NOT NULL,
    CONSTRAINT "pk_titles" PRIMARY KEY (
     )
);


ALTER TABLE "employees" ADD CONSTRAINT "fk_employees_emp_title_id" FOREIGN KEY("emp_title_id")
REFERENCES "titles" ("emp_title_id");

ALTER TABLE "Salaries" ADD CONSTRAINT "fk_Salaries_emp_no" FOREIGN KEY("emp_no")
REFERENCES "employees" ("emp_no"); --says salaries does not exist. continue to investigate

ALTER TABLE "dept_emp" ADD CONSTRAINT "fk_dept_emp_emp_no" FOREIGN KEY("emp_no")
REFERENCES "employees" ("emp_no");

ALTER TABLE "dept_emp" ADD CONSTRAINT "fk_dept_emp_dept_no" FOREIGN KEY("dept_no")
REFERENCES "departments" ("dept_no");

ALTER TABLE "dept_manager" ADD CONSTRAINT "fk_dept_manager_dept_no" FOREIGN KEY("dept_no")
REFERENCES "departments" ("dept_no");

ALTER TABLE "dept_manager" ADD CONSTRAINT "fk_dept_manager_emp_no" FOREIGN KEY("emp_no")
REFERENCES "employees" ("emp_no");



SELECT * FROM departments; --imported!
SELECT * FROM Salaries;  --imported!
SELECT * FROM titles; --imported!
SELECT * FROM employees --imported!
SELECT * FROM  dept_manager --imported!
SELECT * FROM dept_emp --imported!


-- 01 List the employee number, last name, first name, sex, 
--	and salary of each employee.
SELECT e.emp_no, e.last_name, e.first_name, e.sex, s.salary
FROM employees as e
JOIN Salaries as s ON e.emp_no = s.emp_no;


-- 02 List the first name, last name, and hire date
--	for the employees who were hired in 1986.
SELECT first_name, last_name, hire_date
FROM employees
WHERE SUBSTRING(hire_date, 7, 4) = '1986';



-- 03 List the manager of each department along with their
--	department number, department name, employee number, last name, and first name.
SELECT dm.dept_no, d.dept_name, e.emp_no, e.last_name, e.first_name
FROM dept_manager as dm
JOIN departments as d ON dm.dept_no = d.dept_no
JOIN employees as e ON dm.emp_no = e.emp_no;


-- 04 List the department number for each employee along with
-- that employeeâ€™s employee number, last name, first name, and department name.
SELECT de.emp_no, e.last_name, e.first_name, de.dept_no, d.dept_name
FROM dept_emp as de
JOIN employees as e ON de.emp_no = e.emp_no
JOIN departments as d ON de.dept_no = d.dept_no;


-- 05 List first name, last name, and sex of each employee
--	whose first name is Hercules and whose last name begins with the letter B.
SELECT first_name, last_name, sex
FROM employees
WHERE first_name = 'Hercules' AND last_name LIKE 'B%';


-- 06 List each employee in the Sales department, including
--	their employee number, last name, and first name.
SELECT e.emp_no, e.last_name, e.first_name, d.dept_name
FROM employees AS e
JOIN dept_emp AS de ON e.emp_no = de.emp_no
JOIN departments AS d ON de.dept_no = d.dept_no
WHERE d.dept_name = 'Sales';


-- 07 List each employee in the Sales and Development 
--	departments, including their employee number, last name, first name, and department name.
SELECT e.emp_no, e.last_name, e.first_name, d.dept_name
FROM employees as e
JOIN dept_emp as de ON e.emp_no = de.emp_no
JOIN departments as d ON de.dept_no = d.dept_no
WHERE d.dept_name IN ('Sales', 'Development');


-- 08 List the frequency counts, in descending order, of all 
--	the employee last names (that is, how many employees share each last name).
SELECT last_name, COUNT(*) AS frequency
FROM employees
GROUP BY last_name
ORDER BY frequency DESC;

